# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


# from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import QIcon, QFont
import sys
from plugin.OK2Ship_PyQT5 import OK2ShipReviewer_GUI
from plugin.Data_Combiner_PyQT5 import DataCombiner_GUI
from OK2Ship_Reviewer import OK2D_Sorter

version_id = '0.2.28'


class CTDA_MainWindow(QMainWindow):
    def __init__(self, version_id, author_id='Amazon SQM'):
        super(CTDA_MainWindow, self).__init__()
        self.resize(800, 600)
        self.setWindowTitle("Camera Test Data Analyst %s - By %s" % (version_id, author_id))
        self.setWindowIcon(QIcon('image/camera.svg'))
        self.OK2Ship_Gui = OK2ShipReviewer_GUI()

        self.button_font = QFont()
        self.button_font.setFamily("Microsoft YaHei")
        self.button_font.setPointSize(18)

        self.setupUi(author_id)

    def setupUi(self, author_id):
        self.big_title_lbl = QLabel("Camera Test Data Analyst", self)
        self.big_title_lbl.setGeometry(QRect(50, 40, 700, 80))
        #self.big_title_lbl.setText("Camera Test Data Analyst")
        font = QFont()
        font.setFamily("Arial")
        font.setPointSize(36)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.big_title_lbl.setFont(font)
        self.big_title_lbl.setAlignment(Qt.AlignCenter)
        self.big_title_lbl.setObjectName("big_title_lbl")

        self.title2_lbl = QLabel("By %s" % author_id, self)
        self.title2_lbl.setGeometry(QRect(530, 140, 241, 30))
        font = QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setItalic(True)
        self.title2_lbl.setFont(font)
        self.title2_lbl.setObjectName("title2_lbl")

        self.func_list_widget = QWidget(self)
        self.func_list_widget.setGeometry(QRect(200, 180, 400, 300))
        self.func_list_widget.setObjectName("func_list_widget")

        self.vertical_func_layout = QVBoxLayout(self.func_list_widget)
        self.vertical_func_layout.setContentsMargins(0, 0, 0, 0)
        self.vertical_func_layout.setObjectName("vertical_func_layout")

        self.combiner_btn = QPushButton('Data Analysis', self.func_list_widget)
        self.combiner_btn.setIcon(QIcon('./image/data_analysis.ico'))
        self.combiner_btn.setFont(self.button_font)
        self.combiner_btn.setObjectName("combiner_btn")
        self.combiner_btn.clicked.connect(lambda: print('hahaha'))
        self.vertical_func_layout.addWidget(self.combiner_btn)

        self.reviewer_btn = QPushButton("OK2Delivery Reviewer", self.func_list_widget)
        self.reviewer_btn.setIcon(QIcon('./image/delivery.ico'))
        self.reviewer_btn.clicked.connect(self.call_ok2ship_reviewer)
        self.reviewer_btn.setFont(self.button_font)
        self.reviewer_btn.setObjectName("reviewer_btn")
        self.vertical_func_layout.addWidget(self.reviewer_btn)

        self.sfr_btn = QPushButton("SFR Analyst", self.func_list_widget)
        self.sfr_btn.setEnabled(False)
        self.sfr_btn.setFont(self.button_font)
        self.sfr_btn.setObjectName("sfr_btn")
        self.vertical_func_layout.addWidget(self.sfr_btn)

        self.blemish_btn = QPushButton('Blemish Coordinate Analysis', self.func_list_widget)
        self.blemish_btn.setEnabled(False)
        self.blemish_btn.setFont(self.button_font)
        self.blemish_btn.setObjectName("blemish_btn")
        self.vertical_func_layout.addWidget(self.blemish_btn)


    def call_ok2ship_reviewer(self):
        self.OK2Ship_Gui.show()

    def call_sfr_analyst(self):
        pass

    def call_blemish_coor_analyst(self):
        pass

    def self_quit(self):
        self.close()
        sys.exit(0)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    main = CTDA_MainWindow(version_id=version_id)
    main.show()
    # main.center()

    sys.exit(app.exec_())
